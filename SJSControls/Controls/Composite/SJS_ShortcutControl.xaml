<UserControl x:Class="SJSControls.Controls.Composite.SJS_ShortcutControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SJSControls.Controls.Composite"
             xmlns:controls="clr-namespace:SJSControls.Controls.Basic"
             mc:Ignorable="d" x:Name="root">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SJSControls;component/ControlStyles/BaseStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="myButton" TargetType="{x:Type Button}">
                <Setter Property="BorderBrush" Value="DarkGray"/>
                <Setter Property="BorderThickness" Value="3"/>
                <Setter Property="Width" Value="{Binding BTNWidth, ElementName=root}"/>
                <Setter Property="Height" Value="24"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Part_Border" Margin="1" BorderBrush="{StaticResource COLOR_LIME}" BorderThickness="2" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}" ContentSource="Content"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Part_Border" Property="BorderBrush" Value="DarkOrange"/>
                                    <Setter TargetName="Part_Border" Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="Button.IsPressed" Value="True">
                                    <Setter TargetName="Part_Border" Property="BorderBrush" Value="White"/>
                                    <Setter TargetName="Part_Border" Property="Background" Value="#404040"/>
                                    <Setter Property="Foreground" Value="Yellow"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="PreviewMouseMove" Handler="Border_PreviewMouseMove"/>
            </Style>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Text" Value="{Binding TXBText, ElementName=root}"/>
            </Style>
            <Style x:Key="Title" TargetType="{x:Type controls:SJS_BaseTextBox}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="TBXWidth" Value="100"/>
            </Style>
            <Style x:Key="Path" TargetType="{x:Type controls:SJS_BaseTextBox}">
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <StackPanel Orientation="Horizontal">
        <Button  x:Name="RunButton" Style="{StaticResource myButton}" Content="실행" Command="{Binding RunProgram}" CommandParameter="{Binding ControlName}"/>
        <Popup x:Name="myPopup" 
           Placement="Relative" 
           AllowsTransparency="True" 
           PopupAnimation="Fade"
           HorizontalOffset="0"
           VerticalOffset="0">
            <Popup.Style>
                <Style  TargetType="{x:Type Popup}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=RunButton,  Path=IsMouseOver}" Value="True">
                            <Setter Property="IsOpen" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Popup.Style>
            <Border IsHitTestVisible="False" Background="{StaticResource COLOR_GRAY}" BorderBrush="Gray" BorderThickness="1" CornerRadius="3">
                <Grid>
                    <TextBlock Text="{Binding Path=MyTag, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Foreground="{StaticResource COLOR_WHITE}"  Margin="10,5" VerticalAlignment="Center"/>
                </Grid>
            </Border>
        </Popup>
        <controls:SJS_BaseTextBox x:Name="WT1" Style="{StaticResource Title}"/>
        <TextBlock Width="40"/>
        <controls:SJS_BaseTextBox x:Name="WT2" Style="{StaticResource Path}" TBXReadOnly="True" Height="22"/>
        <Button Style="{StaticResource EPIButton2}" Content="프로그램" Width="70" Command="{Binding OpenPath}"/>
        <Button Style="{StaticResource EPIButton2}" Content="폴더" Width="40" Command="{Binding OpenFolderPath}"/>
        <Button Style="{StaticResource EPIButton2}" Content="저장" Width="40" Command="{Binding SaveSetting}"/>
        <Button Style="{StaticResource EPIButton2}" Content="삭제" Width="40" Command="{Binding ClearTextBox}"/>
    </StackPanel>
</UserControl>
